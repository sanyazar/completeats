#!/usr/bin/perl
use strict;
use warnings;

use Proc::Daemon;
use Proc::PID::File;
use Getopt::Long;
use Cwd;
use File::Spec::Functions;
use AnyEvent::Impl::Perl;
use AnyEvent;
use AnyEvent::Handle;
use AnyEvent::Socket;

use Time::HiRes qw(usleep);

# Daemonize
#Proc::Daemon::Init();
my $pf = catfile('/run/agitask.pid');
my $daemon = Proc::Daemon->new(
    pid_file => $pf
#   , work_dir => getcwd()
);

# are you running?  Returns 0 if not.
my $pid = $daemon->Status($pf);
my $daemonize = 1;

## Если демон уже запущен, то просто выходим.
#if (Proc::PID::File->running()) {
#  print "Already running\n";
#  exit 0;
#}

GetOptions(
    'daemon!' => \$daemonize,
    "help"    => \&usage,
    "reload"  => \&reload,
    "restart" => \&restart,
    "start"   => \&run,
    "status"  => \&status,
    "stop"    => \&stop
    ) or &usage;

exit(0);

# ==================================================
sub usage
{
    my ($opt_name, $opt_value) = @_;
    print "your usage text goes here...\n";
    exit(0);
}
# ==================================================
sub reload
{
    my ($opt_name, $opt_value) = @_;
    print "reload process not implemented.\n";
}
# ==================================================
sub restart
{
    my ($opt_name, $opt_value) = @_;
    &stop;
    &run;
}
# ==================================================
sub stop {
        if ($pid) {
            print "Stopping pid $pid...\n";
            if ($daemon->Kill_Daemon($pf)) {
                print "Successfully stopped.\n";
            } else {
                print "Could not find $pid.  Was it running?\n";
            }
         } else {
                print "Not running, nothing to stop.\n";
         }
}

sub status {
    if ($pid) {
        print "Running with pid $pid.\n";
    } else {
        print "Not running.\n";
    }
}

sub run {
    if (!$pid) {
        print "Starting...\n";
        if ($daemonize) {
            # when Init happens, everything under it runs in the child process.
            # this is important when dealing with file handles, due to the fact
            # Proc::Daemon shuts down all open file handles when Init happens.
            # Keep this in mind when laying out your program, particularly if
            # you use filehandles.
            $daemon->Init;
        }

	use DBI;
	# имя базы данных
	my $dbname = "asterisk";
	# имя пользователя
	my $username = "asterisk";
	# пароль
	#my $password = "AstraKonESTIk98";
	my $password = "asteposter54gy";
	# имя или IP адрес сервера
	my $dbhost = "localhost";
	# порт
	my $dbport = "5432";
	# опции
	my $dboptions = "-e";
	# терминал
	my $dbtty = "ansi";

	my $url = "https://admin2.ipay.ua/autocall?token=ATplyHfq0gGPk6gDk8jeDrLvRHbqFKqCv3xBVk1D2JRHIUAulgAAAAA";
	#my $url = "https://admin2.ipay.ua/autocall?token=ATplyHfq0gGPk6gDk8jeDrLvRHbqFKqCv3xBVk1D2JRHIUAulgAAAAA";

	my $queryupdate;
	my $rvupdate;

	my $dbh = DBI->connect("dbi:Pg:dbname=$dbname;host=$dbhost;port=$dbport;options=$dboptions;tty=$dbtty","$username","$password",
			    {PrintError => 0});

	my $query = "SELECT id, url, poststr FROM agitaskss WHERE flag = 0";

	my $sth = $dbh->prepare($query);
	my $rv;
	my @array;

	my $continue = 1;
	$SIG{TERM} = sub { $continue = 0 };

	my $logFileName = '/tmp/task-curl.log';
	my $LOG_FILE;

	open $LOG_FILE, '>>', $logFileName;

	# Enter loop to do work
	while ($continue) {
	  $rv = $sth->execute();
	  if (!defined $rv) {
	    print "При выполнении запроса '$query' возникла ошибка: " . $dbh->errstr . "\n";
	    exit(0);
	  }

	  while (@array = $sth->fetchrow_array()) {
	    print { $LOG_FILE } "\nRequesting $url...\n";
	    #system('curl \''.$url.'\' --max-time 5 --retry 3 --data \''.$array[2].'\' >>/tmp/taxi-curl.log 2>&1');
	    print { $LOG_FILE } 'curl "'.$url.'&'.$array[2].'" --max-time 5 --retry 3 >>/tmp/taxi-curl.log 2>&1';
	    system('curl "'.$url.'&'.$array[2].'" --max-time 5 --retry 3 >>/tmp/taxi-curl.log 2>&1');
	    $queryupdate = "UPDATE agitaskss SET flag = 1 WHERE id = $array[0]";
	    $rvupdate = $dbh->do($queryupdate);

	  }
	  usleep(100000);
	}
	$sth->finish();
	$dbh->disconnect();
	close $LOG_FILE;

    }
}
